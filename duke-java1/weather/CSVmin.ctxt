#BlueJ class context
comment0.target=CSVmin
comment0.text=\n\ \u5728\u8FD9\u91CC\u7ED9\u51FA\u5BF9\u7C7B\ CSVmax\ \u7684\u63CF\u8FF0\u3002\n\ \n\ @\u4F5C\u8005\uFF08\u4F60\u7684\u540D\u5B57\uFF09\n\ @\u7248\u672C\uFF08\u4E00\u4E2A\u7248\u672C\u53F7\u6216\u8005\u4E00\u4E2A\u65E5\u671F\uFF09\n
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment10.params=parser\ value
comment10.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ int)
comment11.params=
comment11.target=void\ averageTemperature()
comment12.params=
comment12.target=void\ averageTemperatureTHAN80()
comment2.params=
comment2.target=void\ testColdestHourInFile()
comment3.params=
comment3.target=java.lang.String\ fileWithColdestTemperature()
comment4.params=
comment4.target=void\ testfileWithColdestTemperature()
comment5.params=parser
comment5.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment6.params=
comment6.target=void\ testLowestHumidityInFile()
comment7.params=
comment7.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInManyFiles()
comment8.params=
comment8.target=void\ testLowestHumidityInManyFiles()
comment9.params=parser
comment9.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
numComments=13
